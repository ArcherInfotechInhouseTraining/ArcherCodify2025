643.Maximum Average Subarray I
( https://leetcode.com/problems/maximum-average-subarray-i/?envType=study-plan-v2&envId=leetcode-75 )

You are given an integer array nums consisting of n elements, and an integer k.

Find a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 will be accepted.

 

Example 1:

Input: nums = [1,12,-5,-6,50,3], k = 4
Output: 12.75000
Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75
Example 2:

Input: nums = [5], k = 1
Output: 5.00000
 


//Code

class Solution {
    public double findMaxAverage(int[] nums, int k) {
        double ans=0.0;
        double avg=0.0;
        int sum=0;

        for(int i=0;i<k;i++)
        {
            sum=sum+nums[i];
        }
        avg=sum*1.0/k;
        ans=avg;

        for(int i=k; i<nums.length;i++)
        {
                sum=sum+nums[i]-nums[i-k];
                avg=sum*1.0/k;
                ans=Math.max(ans, avg);
        }

        return ans;

        
    }
}