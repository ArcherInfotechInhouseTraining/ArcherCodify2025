// Private Constructor

	A private constructor in Java is a constructor that is declared with the private access modifier. Unlike public 
	or protected constructors, it restricts object creation from outside the class. This means instances of the 	
	class cannot be created directly from outside the class.

	public class Example {
    		private Example() {
        		// Initialization code
    		}
	}


	Why Use a Private Constructor?
	Private constructors are used to achieve specific design patterns and behaviors in Java. 
	Some common use cases include:

	1. Singleton Design Pattern: A singleton ensures that only one instance of a class is created during the 
	   application's lifecycle. The class provides a global access point to this instance.

	2. Factory Method Pattern: A factory method uses a private constructor to control the 
	   creation of objects and delegates object creation to static methods.

	   
