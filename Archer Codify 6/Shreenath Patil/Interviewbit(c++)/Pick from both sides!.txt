Problem Description
 
 

Given an integer array A of size N.

You have to pick exactly B elements from either left or right end of the array A to get the maximum sum.

Find and return this maximum possible sum.

NOTE: Suppose B = 4 and array A contains 10 elements then

You can pick the first four elements or can pick the last four elements or can pick 1 from the front and 3 from the back etc. you need to return the maximum possible sum of elements you can pick.



solution:-


int Solution::solve(vector<int> &A, int B) 
{
    int n=A.size();
    int curr_sum = 0;
    for(int i=0;i<B;i++)
    {
        curr_sum = curr_sum + A[i];
    }
    
    int max_sum = curr_sum;
    
    for(int i=0;i<B;i++)
    {
        curr_sum = curr_sum - A[B-1-i]+ A[n-1-i];
    
        max_sum = max( max_sum ,curr_sum );
         
    }
    return max_sum;
}
