Problem:
Digital root is the recursive sum of all the digits in a number.

Given n, take the sum of the digits of n. If that value has more than one digit, continue reducing in this way until a single-digit number is produced. The input will be a non-negative integer.

Examples
    16  -->  1 + 6 = 7
   942  -->  9 + 4 + 2 = 15  -->  1 + 5 = 6
132189  -->  1 + 3 + 2 + 1 + 8 + 9 = 24  -->  2 + 4 = 6
493193  -->  4 + 9 + 3 + 1 + 9 + 3 = 29  -->  2 + 9 = 11  -->  1 + 1 = 2

Code:
   
int digital_root(int n) {
    while (n >= 10) { // Keep summing the digits until the number is a single digit
        int sum = 0;
        
        // Sum the digits of n
        while (n > 0) {
            sum += n % 10; // Add the last digit to sum
            n /= 10;        // Remove the last digit
        }
        
        n = sum; // Set n to the sum of digits for the next iteration
    }
    
    return n; // Return the final single-digit result
}