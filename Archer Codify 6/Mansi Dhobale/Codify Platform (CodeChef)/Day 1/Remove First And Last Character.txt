
Problem:
It's pretty straightforward. Your goal is to create a function that removes the first and last characters of a string. You're given one parameter, the original string. You don't have to worry about strings with less than two characters.

Code:
char *firstlast_char(char* dst, const char* src)
{
  int i;
  int j;
  int len;

  i = 1;
  j = 0;
  len = lenarray(src);
  len = len - 1;
  while (i < len)
  {
     dst[j] = src[i];
     j++;
     i++; 
  }
  dst[j] = '\0';
  return (dst);
}


int lenarray(const char *src)
{
  int i;

  i = 0;
  while (src[i] != '\0')
    i++;
  return(i);
}

Explaination of Code:

char *firstlast_char(char* dst, const char* src) // this is the function which is named as a firstlast_char it contains the dst which is the copy of the array which doesn't conatin first and last character
// and src is the original string
{
  int i,j,len;

  i = 1;
  j = 0;
  len = lenarray(src);//here we passed he original string into the function lenarray ehich checks the length of the original array which is sored in len.
  
  while (i < (len-1))// we get the length from the lenarray function we are checking that 
  {
     dst[j] = src[i];// it copies the charcter pf the string src into the dst

     j++;//Increments j to move to the next position in dst
     i++; //Increments i to move to the next character in src.

  }
  dst[j] = '\0;
  return (dst);
}

if (len <= 2) {
        dst[0] = '\0'; // 
        return dst;
    }

int lenarray(const char *src)//it checks the length of the array.
{
  int i;
for(i=0;str[i]!='\0';i++)
  return(i);
}


