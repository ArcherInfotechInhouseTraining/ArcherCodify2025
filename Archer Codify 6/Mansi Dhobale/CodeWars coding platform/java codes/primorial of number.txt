Problem:
Definition (Primorial Of a Number)
Is similar to factorial of a number, In primorial, not all the natural numbers get multiplied, only prime numbers are multiplied to calculate the primorial of a number. It's denoted with P# and it is the product of the first n prime numbers.

Task
Given a number N , calculate its primorial.

Notes
Only positive numbers will be passed (N > 0) .
Input >> Output Examples:
1- numPrimorial (3) ==> return (30)
Explanation:
Since the passed number is (3) ,Then the primorial should obtained by multiplying 2 * 3 * 5 = 30 .

Mathematically written as , P3# = 30 .

2- numPrimorial (5) ==> return (2310)
Explanation:
Since the passed number is (5) ,Then the primorial should obtained by multiplying  2 * 3 * 5 * 7 * 11 = 2310 .

Mathematically written as , P5# = 2310 .

3- numPrimorial (6) ==> return (30030)
Explanation:
Since the passed number is (6) ,Then the primorial should obtained by multiplying  2 * 3 * 5 * 7 * 11 * 13 = 30030 .

Mathematically written as , P6# = 30030 .

Code:

 int num_primorial(int n)
{
  int Primorial = 1 ;
int num = 2 , cnt = 0;
  while (n !=cnt){
   int start = 2, isPrim = 0;
    while(start <= num){
      if(num % start == 0){
        isPrim++;
      }
      start++;
    }
    if(isPrim == 1){
      Primorial *= num;
      cnt++;
    }
    num++;
  }
    return Primorial;
}

 The variable Primorial starts as 1 to hold the result. num starts at 2 (the first prime) and cnt starts at 0 to count how many primes we have found.
The while loop runs until we find N prime numbers. The condition is cnt != n, meaning the loop continues until we have found the first N primes.
The inner loop checks whether the current number num is prime by checking if it is divisible by any number from 2 to num-1. If it’s divisible, it’s not prime, and if not, it’s a prime number.
If a prime is found, it's multiplied to the Primorial, and cnt is incremented.
