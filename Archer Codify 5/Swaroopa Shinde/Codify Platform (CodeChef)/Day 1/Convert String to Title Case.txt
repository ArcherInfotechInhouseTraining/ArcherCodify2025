
Given a string S consisting of only lowercase and uppercase English letters and 
spaces, your task is to convert it into title case. In title case, the first letter of each 
word is capitalized while the rest are in lowercase, except for words that are 
entirely in uppercase (considered as acronyms), which should remain unchanged.

Note:

Words are defined as contiguous sequences of English letters separated by spaces.
Acronyms are words that are entirely in uppercase and should remain unchanged.
Assume the input does not contain leading, trailing, or multiple spaces between words.

Solution :

#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin >> t;
    cin.ignore();
    while (t--) 
    {
        string s;
        getline(cin, s);
        int len = s.length();
        int sp = 0;
        bool fl = false;

        for (int i = 0; i < len + 1; i++)
        {
            if ((s[i] == ' ') || s[i] == '\0') {
                if (fl) {
                    if (s[sp] >= 'a' && s[sp] <= 'z') {
                        s[sp] -= 32;
                    }
               for (int j = sp + 1; s[j] != ' ' && s[j] != '\0'; j++) {
                        if (s[j] >= 'A' && s[j] <= 'Z') 
                        {
                            s[j] += 32;
                        }
                    }
                }
                sp = i + 1;
                fl = false;
            }
            else if (s[i] >= 'a' && s[i] <= 'z') {
                fl = true;
            }
        }

        cout << s << endl;
    }

    return 0;
}