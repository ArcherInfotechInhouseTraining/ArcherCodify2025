#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 100

struct Book {
    int id;
    char title[100];
    char author[100];
    int isIssued; // 0 = available, 1 = issued
};

void addBook();
void displayBooks();
void issueBook();
void returnBook();
void saveBook(struct Book b);
void loadBooks(struct Book books[], int *count);

int main() {
    int choice;
    do {
        printf("\n--- Library Management System ---\n");
        printf("1. Add Book\n2. Display Books\n3. Issue Book\n4. Return Book\n5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // to consume newline

        switch(choice) {
            case 1: addBook(); break;
            case 2: displayBooks(); break;
            case 3: issueBook(); break;
            case 4: returnBook(); break;
            case 5: printf("Exiting...\n"); break;
            default: printf("Invalid choice\n");
        }
    } while(choice != 5);
    return 0;
}

void addBook() {
    struct Book b;
    printf("Enter Book ID: ");
    scanf("%d", &b.id);
    getchar();
    printf("Enter Book Title: ");
    fgets(b.title, 100, stdin);
    b.title[strcspn(b.title, "\n")] = 0;
    printf("Enter Author Name: ");
    fgets(b.author, 100, stdin);
    b.author[strcspn(b.author, "\n")] = 0;
    b.isIssued = 0;

    saveBook(b);
    printf("Book added successfully!\n");
}

void displayBooks() {
    struct Book b;
    FILE *fp = fopen("books.txt", "rb");
    if (!fp) {
        printf("No books found.\n");
        return;
    }
    printf("\n%-5s %-30s %-20s %-10s\n", "ID", "Title", "Author", "Status");
    while (fread(&b, sizeof(b), 1, fp)) {
        printf("%-5d %-30s %-20s %-10s\n", b.id, b.title, b.author, b.isIssued ? "Issued" : "Available");
    }
    fclose(fp);
}

void issueBook() {
    struct Book books[MAX];
    int count = 0, id, found = 0;
    loadBooks(books, &count);

    printf("Enter Book ID to issue: ");
    scanf("%d", &id);

    for (int i = 0; i < count; i++) {
        if (books[i].id == id) {
            found = 1;
            if (books[i].isIssued) {
                printf("Book already issued.\n");
            } else {
                books[i].isIssued = 1;
                printf("Book issued successfully.\n");
            }
            break;
        }
    }

    if (!found) {
        printf("Book not found.\n");
        return;
    }

    FILE *fp = fopen("books.txt", "wb");
    for (int i = 0; i < count; i++)
        fwrite(&books[i], sizeof(struct Book), 1, fp);
    fclose(fp);
}

void returnBook() {
    struct Book books[MAX];
    int count = 0, id, found = 0;
    loadBooks(books, &count);

    printf("Enter Book ID to return: ");
    scanf("%d", &id);

    for (int i = 0; i < count; i++) {
        if (books[i].id == id) {
            found = 1;
            if (!books[i].isIssued) {
                printf("Book was not issued.\n");
            } else {
                books[i].isIssued = 0;
                printf("Book returned successfully.\n");
            }
            break;
        }
    }

    if (!found) {
        printf("Book not found.\n");
        return;
    }

    FILE *fp = fopen("books.txt", "wb");
    for (int i = 0; i < count; i++)
        fwrite(&books[i], sizeof(struct Book), 1, fp);
    fclose(fp);
}

void saveBook(struct Book b) {
    FILE *fp = fopen("books.txt", "ab");
    fwrite(&b, sizeof(b), 1, fp);
    fclose(fp);
}

void loadBooks(struct Book books[], int *count) {
    FILE *fp = fopen("books.txt", "rb");
    if (!fp) return;

    while (fread(&books[*count], sizeof(struct Book), 1, fp)) {
        (*count)++;
    }
    fclose(fp);
}


Output : 
Library Management System 
1. Add Book
2. Display Books
3. Issue Book
4. Return Book
5. Exit
Enter your choice: 1
Enter Book ID: 101
Enter Book Title: C Programming
Enter Author Name: Dennis Ritchie
Book added successfully!

 Library Management System 
1. Add Book
2. Display Books
3. Issue Book
4. Return Book
5. Exit
Enter your choice: 1
Enter Book ID: 102
Enter Book Title: Data Structures
Enter Author Name: Mark Allen Weiss
Book added successfully!

Library Management System 
1. Add Book
2. Display Books
3. Issue Book
4. Return Book
5. Exit
Enter your choice: 2

ID    Title                          Author               Status    
101   C Programming                  Dennis Ritchie       Available 
102   Data Structures                Mark Allen Weiss     Available 

Library Management System 
Enter your choice: 3
Enter Book ID to issue: 101
Book issued successfully.

Library Management System 
Enter your choice: 2

ID    Title                          Author               Status    
101   C Programming                  Dennis Ritchie       Issued    
102   Data Structures                Mark Allen Weiss     Available 

Library Management System 
Enter your choice: 4
Enter Book ID to return: 101
Book returned successfully.

Library Management System 
Enter your choice: 5

Explanation :
Library Management System (C) â€” Designed a console-based library system using file handling and structures. 
Features include book addition, issuing/returning, and persistent data storage.