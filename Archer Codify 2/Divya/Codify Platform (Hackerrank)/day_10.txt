import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();  
        for (int i = 0; i < t; i++) {
            try {
                long x = sc.nextLong();  

                System.out.println(x + " can be fitted in:");

               
                if (x >= Byte.MIN_VALUE && x <= Byte.MAX_VALUE) {
                    System.out.println("* byte");
                }
                
                if (x >= Short.MIN_VALUE && x <= Short.MAX_VALUE) {
                    System.out.println("* short");
                }
                
                if (x >= Integer.MIN_VALUE && x <= Integer.MAX_VALUE) {
                    System.out.println("* int");
                }
               
                if (x >= Long.MIN_VALUE && x <= Long.MAX_VALUE) {
                    System.out.println("* long");
                }
            } catch (Exception e) {
                
                System.out.println(sc.next() + " can't be fitted anywhere.");
            }
        }
        sc.close();
    }
}

=======================================
Reading the number: We use nextLong() to handle large numbers, since long can store numbers outside the range of int and short. If the number exceeds the long range, an exception will be caught.
Range Checks: We use the predefined constants Byte.MIN_VALUE, Byte.MAX_VALUE, Short.MIN_VALUE, Short.MAX_VALUE, Integer.MIN_VALUE, Integer.MAX_VALUE, Long.MIN_VALUE, and Long.MAX_VALUE to compare the input number against the valid ranges for each type.
Output: Based on the checks, we print which data types can store the number, in the order of byte, short, int, and long.
Exception Handling: If a number cannot be fitted into any of the data types, we catch the exception and print that it can't be fitted anywhere._