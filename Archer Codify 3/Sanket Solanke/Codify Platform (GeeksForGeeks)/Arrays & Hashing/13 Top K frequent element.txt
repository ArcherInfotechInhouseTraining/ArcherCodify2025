*Title:*
Given an integer array nums and an integer k, return the k most frequent elements within the array.
The test cases are generated such that the answer is always unique.

You may return the output in any order.

Examples : 
Input: nums = [1,2,2,3,3,3], k = 2
Output: [2,3]


*Link:*
https://neetcode.io/problems/top-k-elements-in-list

*Solution:*
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
     
    List<Integer>[] bucket = new List[nums.length + 1];
    Map<Integer, Integer> freqMap = new HashMap<>();

    for(int n : nums)
    {
        freqMap.put(n, freqMap.getOrDefault(n, 0) + 1);
    }

    for(int key : freqMap.keySet())
    {
        int freq = freqMap.get(key);
        if(bucket[freq] == null)
        {
            bucket[freq] = new ArrayList<>();
        }
        bucket[freq].add(key);
    }
    
    int[] res = new int[k];
    int counter=0;
    for(int pos=bucket.length-1; pos>=0 && counter<k; pos--)
    {
        if(bucket[pos]!=null)
        for(int integer : bucket[pos])
            res[counter++]= integer;
    }
    return res;
    }
}


*Test Cases:*
Input: nums = [1,2,2,3,3,3], k = 2

Output: [2,3]