*Title:*
You are given an array arr[] of non-negative integers. Your task is to move all the zeros in the array to the right end while maintaining the relative order of the non-zero elements. The operation must be performed in place, meaning you should not use extra space for another array.

*Example:*

Input: arr[] = [1, 2, 0, 4, 3, 0, 5, 0]
Output: [1, 2, 4, 3, 5, 0, 0, 0]
Explanation: There are three 0s that are moved to the end.

*Link:*
https://www.geeksforgeeks.org/batch/gfg-160-problems/track/arrays-gfg-160/problem/move-all-zeroes-to-end-of-array0751

*Solution:*

class Solution {
    void pushZerosToEnd(int[] arr) {
     int n=arr.length;
     
     int j=0;
     //create temporary array 
     int[] tmp = new int[n];
     //copy non-zero elements to temp array
     for(int i=0; i<n;i++)
     {
         if(arr[i]!=0)
         {
             tmp[j]=arr[i];
             j++;
         }
     }
     
     //replacing empty cells with zero
     while(j<n)
     {
         tmp[j]=0;
         j++;
     }
     
     //copy all elemets from tmp array to original array
     
     for(int i=0;i<n;i++)
     {
         arr[i]=tmp[i];
     }
    }
}

*Test Cases:*
For Input: 
3 5 0 0 4
Your Output: 
3 5 4 0 0
Expected Output: 
3 5 4 0 0

