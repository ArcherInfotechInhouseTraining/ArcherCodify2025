*Title:*
Given an array of integers numbers that is sorted in non-decreasing order.
Return the indices (1-indexed) of two numbers, [index1, index2], such that they add up to a given target number target and index1 < index2. Note that index1 and index2 cannot be equal, therefore you may not use the same element twice.
There will always be exactly one valid solution.

Examples : 
Input: numbers = [1,2,3,4], target = 3

Output: [1,2]



*Link:*
https://neetcode.io/problems/two-integer-sum-ii

*Solution:*
class Solution {
    public int[] twoSum(int[] numbers, int target) {
    int[] arr = new int[2];
    int l=0, flg=0;
    int r=numbers.length-1;
    while(flg!=1)
    {
        if(numbers[l]+numbers[r]>target)
        {
            r--;
        }
        else if(numbers[l]+numbers[r]<target)
        {
            l++;
        }
        else
        {
            flg=1;
        }
    }
    arr[0]=l+1;
    arr[1]=r+1;
    return arr;
    }
}

*Test Cases:*
Input: numbers = [1,2,3,4], target = 3

Output: [1,2]
