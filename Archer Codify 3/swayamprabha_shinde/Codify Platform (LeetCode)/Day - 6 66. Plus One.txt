66. Plus One

Title:
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.

Example 1:

Input: digits = [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Incrementing by one gives 123 + 1 = 124.
Thus, the result should be [1,2,4].
Example 2:

Input: digits = [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
Incrementing by one gives 4321 + 1 = 4322.
Thus, the result should be [4,3,2,2].
Example 3:

Input: digits = [9]
Output: [1,0]
Explanation: The array represents the integer 9.
Incrementing by one gives 9 + 1 = 10.
Thus, the result should be [1,0].
 

Constraints:

1 <= digits.length <= 100
0 <= digits[i] <= 9
digits does not contain any leading 0's.


Solution:

class Solution {
    public static int[] plusOne(int[] digits) {

        // Traverse the digits array from right to left
        for (int i = digits.length - 1; i >= 0; i--) {
            // If the current digit is less than 9, increment it and return the result
            if (digits[i] < 9) {
                digits[i]++;
                return digits;
            }
            // If the current digit is 9, set it to 0 (carry over)
            digits[i] = 0;
        }

        // If all the digits were 9, we need an extra digit at the beginning (e.g., 999 -> 1000)
        int[] result = new int[digits.length + 1];
        result[0] = 1; // Set the first digit to 1 (carry over)
        return result;
    }

     public static void main(String[] args) {
        int[] digits = {1, 2, 3};
        int[] result = plusOne(digits);

        // Print the result
        System.out.println("Output: " + Arrays.toString(result)); // Output: [1, 2, 4]
    }
}    


output:

Input : digits =[1,2,3]          
Output : [1,2,4]
Expected : [1,2,4]

Input : digits = [4,3,2,1]
Output :[4,3,2,2]
Expected : [4,3,2,2]

Input : digits = [9]
Output : [1,0]
Expected : [1,0]


Explanation :

Explanation of the Program:

Method: plusOne
Input:

An array digits where each element represents a single digit of a non-negative integer. For example, [1, 2, 3] represents 123.
Logic:

Traverse the array from right to left: This simulates adding 1 to the number starting from the least significant digit (rightmost digit), just like in manual addition.

Check if the digit is less than 9:

If digits[i] < 9, simply increment it by 1 and return the modified array. No further changes are needed because there is no carry-over.
Handle carry-over:

If the digit is 9, set it to 0 to account for the carry-over (e.g., 9 + 1 = 10 sets the current position to 0 and carries over 1 to the next position).
Special case (all digits are 9):

If the entire array consists of 9s (e.g., [9, 9, 9]), after the loop ends, all digits will be 0. In this case, an additional digit is needed at the start of the array to represent the carry-over. A new array is created with a size of digits.length + 1, with the first digit set to 1 and the rest initialized to 0.
Output:

Returns the modified array representing the integer after adding 1. 
 