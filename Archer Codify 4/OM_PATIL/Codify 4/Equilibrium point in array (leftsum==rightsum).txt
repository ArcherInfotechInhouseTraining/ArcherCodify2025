Given an array arr[] of non-negative numbers. The task is to find the first equilibrium point in the array. The equilibrium point in an array is an index (or position) such that the sum of all elements before that index is the same as the sum of elements after it.

Note: Return equilibrium point in 1-based indexing. Return -1 if no such point exists. 

Examples:

Input: arr[] = [1, 3, 5, 2, 2]
Output: 3 
Explanation: The equilibrium point is at position 3 as the sum of elements before it (1 + 3) = sum of elements after it (2 + 2). 
Input: arr[] = [0, 1, 0]
Output: 2
Explanation: Since sum all the elements before 1 and after 1 are same, so index 2 is equillibrium.
Input: arr[] = [1, 2, 3]
Output: -1
Explanation: There is no equilibrium point in the given array.
Constraints:
3 <= arr.size() <= 106
0 <= arr[i] <= 109



solution:
//{ Driver Code Starts
// Initial Template for Java
import java.io.*;
import java.util.*;

class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while (t-- > 0) {

            String line = br.readLine();
            String[] tokens = line.split(" ");

            // Create an ArrayList to store the integers
            ArrayList<Integer> array = new ArrayList<>();

            // Parse the tokens into integers and add to the array
            for (String token : tokens) {
                array.add(Integer.parseInt(
                    token)); // Use Integer.parseInt to parse int values
            }

            int[] arr = new int[array.size()];
            int idx = 0;
            for (int i : array) arr[idx++] = i;

            Solution obj = new Solution();

            // calling equilibriumPoint() function
            System.out.println(obj.equilibriumPoint(arr));
            System.out.println("~");
        }
    }
}

// } Driver Code Ends


class Solution {
    // Function to find equilibrium point in the array.
    public static int equilibriumPoint(int arr[]) {
        // code here
        int n=arr.length;
        int leftsum=0,rightsum=0;
        for(int i=0;i<n;i++)
        {
            //must be reset unless error comes
            //because i already got some times.
            leftsum=0;           
            for(int j=0;j<i;j++)
            {
                leftsum=leftsum+arr[j];
                
            }
            //must be reset unless error comes
            //because i already got so many times.
            rightsum=0;
            for(int j=i+1;j<n;j++)
            {
                rightsum=rightsum+arr[j];
            }
            
            if(leftsum==rightsum)
            {
                return i+1;
            }
        }
        return -1;
    }
}
