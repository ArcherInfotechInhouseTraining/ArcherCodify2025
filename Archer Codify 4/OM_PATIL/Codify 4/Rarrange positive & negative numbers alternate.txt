Given an array arr containing equal number of positive and negative elements, arrange the array such that every positive element is followed by a negative element.
Note: The relative order of positive and negative numbers should be maintained.

Examples:

Input: arr[] = [-1, 2, -3, 4, -5, 6]
Output: [2, -1, 4, -3, 6, -5]
Explanation: Positive numbers in order are 2, 4 and 6. Negative numbers in order are -1, -3 and -5. So the arrangement we get is 2, -1, 4, -3, 6 and -5.
Input: arr[] = [-3, 2, -4, 1]
Output: [2, -3, 1, -4] 
Explanation: The positive numbers are 2,1 and negetive numbers are -3, -4  
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(n)

Constraints:
2 ≤ arr.size() ≤ 106
-106 ≤ arr[i] ≤ 106


//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.lang.*;
import java.util.*;

class Main {
    public static void main(String args[]) throws IOException {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());

        while (t-- > 0) {

            ArrayList<Integer> array1 = new ArrayList<Integer>();
            String line = read.readLine();
            String[] tokens = line.split(" ");
            for (String token : tokens) {
                array1.add(Integer.parseInt(token));
            }
            ArrayList<Integer> v = new ArrayList<Integer>();

            v = new Solution().arranged(array1);

            for (int i = 0; i < v.size(); i++) System.out.print(v.get(i) + " ");

            System.out.println();
            System.out.println("~");
        }
    }
}

// } Driver Code Ends


// User function Template for Java

class Solution {
    ArrayList<Integer> arranged(ArrayList<Integer> arr) {
        // code here
        ArrayList<Integer> pos=new ArrayList<>();
        ArrayList<Integer> neg=new ArrayList<>();

        for(int num:arr)
        {
            if(num>0)
            {
                pos.add(num);
            }
            else
            {
                neg.add(num);
            }
        }
        
        // Merging positive and negative numbers alternatively
        ArrayList<Integer> result = new ArrayList<>();
        int i = 0, j = 0;
        while (i < pos.size() && j < neg.size()) {
            result.add(pos.get(i++));
            result.add(neg.get(j++));
        }

        // Add any remaining elements
        while (i < pos.size()) {
            result.add(pos.get(i++));
        }
        while (j < neg.size()) {
            result.add(neg.get(j++));
        }

        return result;
    }
}
