// Using Insertion sort.

import java.util.*;
class SearchArray
{
	public static void main(String []args)
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("\n Enter the count of elements:");
		int cnt=sc.nextInt();

		int ar[]=new int[cnt];

		System.out.println("\n Enter the array elements:");
		for(int i=0;i<ar.length;i++)
		{
			ar[i]=sc.nextInt();
		}

		System.out.println("\n Array elements are: ");
		for(int i=0;i<ar.length;i++)
		{
			System.out.print("\t "+ar[i]);
		}

		/*
		//Insertion sort.
		for(int k=1;k<ar.length;k++)
		{
			int pivot=ar[k];
			int j=k-1;
			while(j!=-1 && ar[j]>pivot)
			{
				ar[j+1]=ar[j];
				j--;
			}
			ar[j+1]=pivot;
			
			System.out.println("\n Insertion sort: ");
			for(int i=0;i<ar.length;i++)
			{
				System.out.print(" \t "+ar[i]);
			}
		}
		*/

		/*
		// Searching Techniques.
		// 1) Linear Search.
		
		System.out.println("\n Enter the no. want to search : ");
		int no=sc.nextInt();
	
		int flg=0;
		for(int i=0;i<ar.length;i++)
		{
			if(ar[i]==no)
			{
				flg=1;
				break;
			}
			System.out.println("no. present at: "+(i+1)+"positon");
			
		}
		
		if(flg==0)
		{
			System.out.print(+no+ "is not present in an array");
		}
		else
		{
			System.out.print(" " +no+ "is present");
		}

		*/
	
		// 2) Binary Search.
		
		System.out.println("\n Enter the no. you want to search :");
		int no=sc.nextInt();
		
		int flg=0;
		int start=0;
		int end=ar.lengSth-1;
		int mid;
		
		do
		{
			mid=(start+end)/2;
			if(ar[mid]==no)
			{
				flg=1;
				break;
			}
			else if(no<ar[mid])
			{
				end=mid-1;
			}
			else if(no>ar[mid])
			{
				start=mid+1;
			}
		}
		while(start<=end);
		if(flg==1)
		{
			System.out.print(+no+ "is present at "+mid+" positon");
		}
		else
		{
			System.out.print(+no+ "is not present in an array");
		}
		
	}
}