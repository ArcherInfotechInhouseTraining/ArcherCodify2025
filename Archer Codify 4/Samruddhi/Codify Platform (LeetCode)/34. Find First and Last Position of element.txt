34. Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.

-------------------------------------------------------------------------------------------------

Example 1:
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Example 2:
Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]


Example 3:
Input: nums = [], target = 0
Output: [-1,-1]

-------------------------------------------------------------------------------------------------



class Solution
 {
    public int[] searchRange(int[] nums, int target) 
    {
        int arr[] = new int [2];  // for output store
        
        arr[0] = arr[1] = -1;   // if target is not found

        for(int i=0; i<nums.length; i++)
        {
            if(nums[i]==target)
            {
                arr[0]=i;    //Set the start index of the target
                arr[1]=i;    //Temporarily set the end index of the target

                // Check for the end index of the target
                while(i+1<nums.length && nums[i+1] == target)
                {
                    i++;
                    arr[1]=i;
                }
                break;
            }
        }
        return arr;
    }
}