____________________________________________________________________________________________________________________________________________________________

Problem :
Java Documentation to refer: https://docs.oracle.com/javase/8/docs/api/java/text/NumberFormat.html

Problem Link: https://www.hackerrank.com/challenges/java-currency-formatter/problem?isFullScreen=true



Note: India does not have a built-in Locale, so you must construct one where the language is en (i.e., English).

Input Format

A single double-precision number denoting Payment
0<=payment<=10^9

On the first line, print US: where u is payment formatted for US currency.
On the second line, print India: where i is payment formatted for Indian currency.
On the third line, print China: where c is  payment formatted for Chinese currency.
On the fourth line, print France: where f is payment formatted for French currency.

Sample Input

12324.134
Sample Output

US: $12,324.13
India: Rs.12,324.13
China: ￥12,324.13
France: 12 324,13 €
Explanation

Each line contains the value of  formatted according to the four countries' respective currencies.

Code:
import java.util.*;
import java.text.*;

public class Solution {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double payment = scanner.nextDouble();
        scanner.close();
        
        // Write your code here.
        String us = NumberFormat.getCurrencyInstance(Locale.US).format(payment);
        String india = NumberFormat.getCurrencyInstance(new Locale("en","in")).format(payment);
        String china = NumberFormat.getCurrencyInstance(Locale.CHINA).format(payment);
        String france = NumberFormat.getCurrencyInstance(Locale.FRANCE).format(payment);
        
        System.out.println("US: " + us);
        System.out.println("India: " + india);
        System.out.println("China: " + china);
        System.out.println("France: " + france);
    }
}

____________________________________________________________________________________________________________________________________________________________