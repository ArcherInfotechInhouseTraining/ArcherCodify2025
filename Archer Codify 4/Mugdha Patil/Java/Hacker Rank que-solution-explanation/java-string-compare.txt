Problem Link: 
https://www.hackerrank.com/challenges/java-string-compare/problem?isFullScreen=true
___________________________________________________________________________________________

Sample Input 

welcometojava
3
___________________________________________________________________________________________
Sample Output 

ava
wel
___________________________________________________________________________________________
Explanation of Problem:

String  s="welcometojava" has the following lexicographically-ordered substrings of length k=3
[ava, com, elc, eto, jav, lco, met, oja, ome, toj, wel]

We then return the first (lexicographically smallest) substring and the last (lexicographically largest) substring as two newline-separated values (i.e., ava\nwel).

The stub code in the editor then prints ava as our first line of output and wel as our second line of output.
_________________________________________________________________________________________

Code:
import java.util.Scanner;

public class Solution {

    public static String getSmallestAndLargest(String s, int k) {
        String smallest = "";
        String largest = "";
         
        smallest = s.substring(0,k);
        largest = s. substring(0,k);
        
        for(int i=1;i<=s.length()-k;i++)
        {
          String substring=s.substring(i,i+k);
          
          if(substring.compareTo(smallest)<0)
          {
            smallest=substring;
          }
          if(substring.compareTo(largest)>0)
          {
            largest=substring;
          }
        }
        return smallest + "\n" + largest;
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s = scan.next();
        int k = scan.nextInt();
        scan.close();
      
        System.out.println(getSmallestAndLargest(s, k));
    }
}