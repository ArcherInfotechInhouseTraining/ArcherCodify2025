Static initialization blocks are executed when the class is loaded, and you can initialize static variables in those blocks.
It's time to test your knowledge of Static initialization blocks. 

You are given a class Solution with a main method. 
Complete the given code so that it outputs the area of a parallelogram with breadth  and height . 
You should read the variables from the standard input.

If  or  , the output should be "java.lang.Exception: Breadth and height must be positive" without quotes.
________________________________________________________________________________________________________________________
Input Format

There are two lines of input. The first line contains : the breadth of the parallelogram. The next line contains : the height of the parallelogram.

Constraints
________________________________________________________________________________________________________________________
Output Format

If both values are greater than zero, then the main method must output the area of the parallelogram. Otherwise, print "java.lang.Exception: Breadth and height must be positive" without quotes.
________________________________________________________________________________________________________________________
Sample input 1

1
3
________________________________________________________________________________________________________________________
Sample output 1

3
________________________________________________________________________________________________________________________
Sample input 2

-1
2
________________________________________________________________________________________________________________________
Sample output 2

java.lang.Exception: Breadth and height must be positive
________________________________________________________________________________________________________________________

Code:
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
//Write your code here
    static int B, H;
    static boolean flag=true;
    
    static
    {
        Scanner sc =  new Scanner(System.in);
        B=sc.nextInt();
        H=sc.nextInt();
        try
        {
            if(B<=0 || H<=0)
            {
                throw new Exception("Breadth and height must be positive");
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
            System.exit(0);
        }
    }

public static void main(String[] args){
		if(flag){
			int area=B*H;
			System.out.print(area);
		}
		
	}//end of main

}//end of class
________________________________________________________________________________________________________________________

Explaination:
	public class Solution {
	The class Solution contains all the code.

	static int B, H;
	B and H: Represent the breadth and height of the rectangle.
		
	static boolean flag = true;
	A boolean flag initialized to true. It ensures that the program runs only if valid input is provided.
	If a boolean variable is declared but not explicitly initialized, its default value is false

	static 
	{
   	 	Scanner sc = new Scanner(System.in);
    		B = sc.nextInt();
    		H = sc.nextInt();
    		
		try 
		{
       			 if (B <= 0 || H <= 0) 
			{
           		 	throw new Exception("Breadth and height must be positive");
        		}
    		} 
		catch (Exception e) 
		{
       			 System.out.println(e);
        		System.exit(0);
    		}
	}

	Reads B and H from the user.
	Validates the inputs to ensure they are positive.
	Throws an exception with the message "Breadth and height must be positive" if either B or H is non-positive.
	Exits the program using System.exit(0) if invalid inputs are detected.

	public static void main(String[] args) 
	{
   	 	if (flag) 
		{
       			 int area = B * H;
       			 System.out.print(area);
   		 }
	}

	Checks if flag is true (indicating valid input).
	Calculates the area of the rectangle as B * H.
	Prints the area.
__________________________________________________________________________________________________________________
Link: https://www.hackerrank.com/challenges/java-static-initializer-block/problem?isFullScreen=true

