Problem: https://leetcode.com/problems/remove-nth-node-from-end-of-list/

Given the head of a linked list, remove the nth node from the end of the list and return its head.

 

Example 1:


Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
Example 2:

Input: head = [1], n = 1
Output: []
Example 3:

Input: head = [1,2], n = 1
Output: [1]
 

Constraints:

The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz



struct ListNode* removeNthFromEnd(struct ListNode* head, int n) {
    int list_len= 0, target, i=1;
    struct ListNode* temp, *currentNode= head;
    if (head== NULL)
        return head;
    if (head->next== NULL)
        return NULL;
    for(list_len= 1; currentNode->next; list_len++, currentNode= currentNode->next);
    currentNode= head;
    target= list_len - n;
    if(target<=0)
    {
        head= head->next;
        free(currentNode);
        return head;
    }
    for( ; i++ < target && currentNode->next; currentNode= currentNode->next);

    temp= currentNode->next;
    currentNode->next= temp->next;
    free(temp);

    return head;
}