Problem: https://leetcode.com/problems/longest-common-prefix/


Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.









char* longestCommonPrefix(char** strs, int strsSize) {
    char* op;
    int i, c, flg, in;
    op= (char*) calloc(strlen(strs[0])+1,sizeof(char));
    in= 0;
    for(c= 0; strs[0][c]; c++)
    {
        flg=1;
        for(i= 0; i<strsSize; i++)
        {
            if(strlen(strs[i])>= c + 1)
            {
                if(strs[i][c]!=strs[0][c])
                {
                    flg= 0;
                }
            }
            else{
                flg= 0;
            }
        }
        if(flg)
        {
            op[in++]= strs[0][c];
        }
        else 
        {
            break;
        }
    }
    return op;
}