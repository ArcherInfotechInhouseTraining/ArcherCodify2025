/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* head, *cur;
    int carry= 0;
    head= cur= (struct ListNode*)malloc(sizeof(struct ListNode));
    cur->val= l1->val+ l2->val;
    if(cur->val>9){
            cur->val-=10;
            carry= 1;
        }
    while(l1->next != NULL && l2->next != NULL){
        l1= l1->next;
        l2= l2->next;
        cur->next= (struct ListNode*)malloc(sizeof(struct ListNode));
        cur= cur->next;
        cur->val= l1->val+ l2->val+ carry;
        carry= 0;
        if(cur->val>9){
            cur->val-=10;
            carry= 1;
        }
    }
    if(l1->next){
        while(l1->next){
            l1= l1->next;
            cur->next= (struct ListNode*)malloc(sizeof(struct ListNode));
            cur= cur->next;
            cur->val= l1->val+ carry;
            carry= 0;
            if(cur->val>9){
                cur->val-=10;
                carry= 1;
            }
        }
    }
    if(l2->next){
        while(l2->next){
            l2= l2->next;
            cur->next= (struct ListNode*)malloc(sizeof(struct ListNode));
            cur= cur->next;
            cur->val= l2->val+ carry;
            carry= 0;
            if(cur->val>9){
                cur->val-=10;
                carry= 1;
            }
        }
    }
    if(carry){
        cur->next= (struct ListNode*)malloc(sizeof(struct ListNode));
        cur= cur->next;
        cur->val= carry;
    }
    cur->next= NULL;
    
    return head;
}